(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

var _footerCtrl = require('./directives/footerCtrl');

var _footerCtrl2 = _interopRequireDefault(_footerCtrl);

var _detailfact = require('./services/detailfact');

var _detailfact2 = _interopRequireDefault(_detailfact);

var _dir = require('./directives/dir1');

var _dir2 = _interopRequireDefault(_dir);

var _dir3 = require('./directives/dir2');

var _dir4 = _interopRequireDefault(_dir3);

var _dir5 = require('./directives/dir3');

var _dir6 = _interopRequireDefault(_dir5);

var _topdir = require('./directives/topdir');

var _topdir2 = _interopRequireDefault(_topdir);

var _menuCtrl = require('./home/menuCtrl.js');

var _menuCtrl2 = _interopRequireDefault(_menuCtrl);

require('./splash/splash.js');

require('./home/home.js');

require('./eventlist/eventlist.js');

require('./eventDetail/eventDetail.js');

require('./speakerDetail/speakerDetail.js');

require('./myschedule/mc.js');

require('./attendeelist/attendeelist.js');

require('./businesscard/businesscard.js');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

angular.module('myApp', ['ui.router', 'ngStorage', 'myApp.splash', 'myApp.home', 'myApp.eventlist', 'myApp.eventDetail', 'myApp.speakerDetail', 'ui.bootstrap', 'myApp.mc', 'myApp.attendeelist', 'myApp.businesscard', 'slickCarousel', 'angularMoment']).config(["$urlRouterProvider", function ($urlRouterProvider) {
    $urlRouterProvider.otherwise('splash');
    console.log("This is route config");
}]).service('detailfact', _detailfact2.default).controller('footerCtrl', _footerCtrl2.default).controller('menuCtrl', _menuCtrl2.default).directive('d1', function () {
    return new _dir2.default();
}).directive('d2', function () {
    return new _dir4.default();
}).directive('d3', function () {
    return new _dir6.default();
}).directive('d4', function () {
    return new _topdir2.default();
});

},{"./attendeelist/attendeelist.js":2,"./businesscard/businesscard.js":4,"./directives/dir1":6,"./directives/dir2":7,"./directives/dir3":8,"./directives/footerCtrl":9,"./directives/topdir":10,"./eventDetail/eventDetail.js":11,"./eventlist/eventlist.js":13,"./home/home.js":15,"./home/menuCtrl.js":17,"./myschedule/mc.js":18,"./services/detailfact":20,"./speakerDetail/speakerDetail.js":21,"./splash/splash.js":23}],2:[function(require,module,exports){
'use strict';

Config.$inject = ["$stateProvider", "$urlRouterProvider"];
var _attendeelistCtrl = require('./attendeelistCtrl');

var _attendeelistCtrl2 = _interopRequireDefault(_attendeelistCtrl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Config($stateProvider, $urlRouterProvider) {
    'ngInject';

    $stateProvider.state({
        name: 'attendeelist',
        url: '/attendeelist',
        templateUrl: './attendeelist/attendeelist.html',
        controller: 'attendeelistCtrl',
        controllerAs: 'alc'
    });
}

angular.module('myApp.attendeelist', ['ui.router', 'ngStorage', 'slickCarousel']).config(Config).controller('attendeelistCtrl', _attendeelistCtrl2.default);

},{"./attendeelistCtrl":3}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var attendeelistCtrl = function () {
  /*@ngInject;*/
  attendeelistCtrl.$inject = ["$scope", "$location", "$http", "detailfact", "$stateParams", "$localStorage"];
  function attendeelistCtrl($scope, $location, $http, detailfact, $stateParams, $localStorage) {
    var _this = this;

    _classCallCheck(this, attendeelistCtrl);

    this.loc = $location;
    this.rp = $stateParams;
    this.scope = $scope;
    this.http = $http;
    this.scope.attendeelist = {};
    this.ls = $localStorage;
    this.scope.search = "";
    this.scope.showbox = false;
    this.detailfact = detailfact;
    this.detailfact.getattendeelist().success(function (res) {
      _this.scope.attendeelist = res;
      console.log(_this.scope.attendeelist);
    });
  }

  _createClass(attendeelistCtrl, [{
    key: "search",
    value: function search() {
      this.scope.showbox = !this.scope.showbox;
    }
  }]);

  return attendeelistCtrl;
}();

exports.default = attendeelistCtrl;

},{}],4:[function(require,module,exports){
'use strict';

Config.$inject = ["$stateProvider", "$urlRouterProvider"];
var _businesscardCtrl = require('./businesscardCtrl');

var _businesscardCtrl2 = _interopRequireDefault(_businesscardCtrl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Config($stateProvider, $urlRouterProvider) {
    'ngInject';

    $stateProvider.state({
        name: 'businesscard',
        url: '/businesscard',
        templateUrl: './businesscard/businesscard.html',
        controller: 'businesscardCtrl',
        controllerAs: 'bcc'
    }).state({
        name: 'editbusiness',
        url: '/editbusiness',
        templateUrl: './businesscard/editbusiness.html',
        controller: 'businesscardCtrl',
        controllerAs: 'bcc'
    });
}

angular.module('myApp.businesscard', ['ui.router', 'ngStorage', 'slickCarousel']).config(Config).controller('businesscardCtrl', _businesscardCtrl2.default);

},{"./businesscardCtrl":5}],5:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var businesscardCtrl = function () {
  /*@ngInject;*/
  businesscardCtrl.$inject = ["$scope", "$location", "$http", "detailfact", "$stateParams", "$localStorage", "$window", "$timeout"];
  function businesscardCtrl($scope, $location, $http, detailfact, $stateParams, $localStorage, $window, $timeout) {
    var _this = this;

    _classCallCheck(this, businesscardCtrl);

    this.location = $location;
    this.rp = $stateParams;
    this.window = $window;
    this.scope = $scope;
    this.timeout = $timeout;
    this.http = $http;
    this.scope.attendeelist = {};
    this.ls = $localStorage;
    this.detailfact = detailfact;
    this.scope.yespic = false;
    console.log(this.ls.phone);
    if (!this.ls.phone) {
      console.log("irotp");
      // this.ls.person[0].pnumber=0;
    }
    this.timeout(function () {
      _this.scope.person = _this.ls.person[0];
      console.log(_this.ls.person[0]);
    }, 0);
  }

  _createClass(businesscardCtrl, [{
    key: "updateprofile",
    value: function updateprofile() {
      console.log("this.scope.person");
      if (this.scope.yespic) {
        this.scope.person.pictureUrl = JSON.parse(this.window.localStorage.pic);
      }
      this.ls.person[0] = this.scope.person;
      this.location.path("businesscard");
      console.log("phonenumber", this.scope.person.pnumber);
      if (this.scope.person.pnumber) {
        this.ls.phone = true;
      }
    }
  }, {
    key: "goback",
    value: function goback() {
      this.location.path("businesscard");
    }
  }, {
    key: "shareLinkedin",
    value: function shareLinkedin() {
      if (this.scope.show) {
        this.scope.fab = "Web/ic_floating_button.png";
      } else {
        this.scope.fab = "Web/ic_floating_button_closed.png";
      }
      this.scope.show = !this.scope.show;
      var payload = {
        "comment": this.location.absUrl().split('?')[0] + "\nName:" + this.scope.person.firstName + "\nDesignation:" + this.scope.person.positions.values[0].title + "\ncompany:" + this.scope.person.positions.values[0].company.name,
        "visibility": {
          "code": "anyone"
        }
      };

      IN.API.Raw("/people/~/shares?format=json").method("POST").body(JSON.stringify(payload)).result(function (data) {
        console.log(data);
        window.open(data.updateUrl, '_blank');
      });
    }
  }]);

  return businesscardCtrl;
}();

exports.default = businesscardCtrl;

},{}],6:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var dir1 =
//this is the directive function for Header
function dir1() {
  _classCallCheck(this, dir1);

  this.restrict = "EA";
  this.transclude = true;
  this.template = '<img src="Web/ic_banner_360.png" height="137px" width=100%></img>';
};

exports.default = dir1;

},{}],7:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var dir2 = function dir2() {
  _classCallCheck(this, dir2);

  this.restrict = "EA";
  this.transclude = true;
  this.templateUrl = 'home/footer.html';
  this.controller = 'footerCtrl';
  this.controllerAs = 'fc';
};

exports.default = dir2;

},{}],8:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var dir3 = function dir3() {
  _classCallCheck(this, dir3);

  this.restrict = "EA";
  this.transclude = true;
  this.templateUrl = 'home/menu.html';
  this.controller = 'menuCtrl';
  this.controllerAs = 'menuCtrl';
};

exports.default = dir3;

},{}],9:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var footerCtrl =
/*@ngInject;*/
["detailfact", "$scope", function footerCtrl(detailfact, $scope) {
  _classCallCheck(this, footerCtrl);

  this.services = detailfact;
  console.log(this.services);
  $scope.footerConfig = {
    dots: false,
    arrows: false,
    centerMode: true,
    slidesToShow: 6,
    centerPadding: '280px',
    autoplay: true,
    autoplaySpeed: 0,
    speed: 2000,
    cssEase: 'linear'
  };
  this.services.getData().success(function (res) {
    console.log(res, "Footer");
    $scope.sponser = res;
  }).error(function () {
    console.log("failed");
  });
}];

exports.default = footerCtrl;

},{}],10:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _homeCtrl = require("../home/homeCtrl");

var _homeCtrl2 = _interopRequireDefault(_homeCtrl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var topdir =
//this is the directive function for Header
function topdir() {
  _classCallCheck(this, topdir);

  this.restrict = "EA";
  this.transclude = true;
  this.templateUrl = "home/home.html";
  this.controller = 'homeCtrl';
  this.controllerAs = 'hc';
};

exports.default = topdir;

},{"../home/homeCtrl":16}],11:[function(require,module,exports){
'use strict';

Config.$inject = ["$stateProvider", "$urlRouterProvider"];
var _eventDetailctrl = require('./eventDetailctrl');

var _eventDetailctrl2 = _interopRequireDefault(_eventDetailctrl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Config($stateProvider, $urlRouterProvider) {
    'ngInject';

    $stateProvider.state({
        name: 'details',
        url: '/details/:id',
        templateUrl: './eventDetail/eventDetail.html',
        controller: 'eventDetailctrl',
        controllerAs: 'edc'
    });
}

angular.module('myApp.eventDetail', ['ui.router', 'ngStorage', 'slickCarousel']).config(Config).controller('eventDetailctrl', _eventDetailctrl2.default);

},{"./eventDetailctrl":12}],12:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
   value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var eventDetailctrl = function () {
   /*@ngInject;*/
   eventDetailctrl.$inject = ["$scope", "$window", "$rootScope", "$location", "$http", "detailfact", "$stateParams", "$localStorage", "$state", "$timeout"];
   function eventDetailctrl($scope, $window, $rootScope, $location, $http, detailfact, $stateParams, $localStorage, $state, $timeout) {
      var _this = this;

      _classCallCheck(this, eventDetailctrl);

      this.location = $location;
      this.sp = $stateParams;
      this.scope = $scope;
      this.http = $http;
      this.window = $window;
      this.scope.atrate = false;
      this.ls = $localStorage;
      this.rs = $rootScope;
      this.scope.rate = 0;
      this.timeout = $timeout;
      this.state = $state;
      this.scope.show = false;
      this.scope.rateflag = true;
      this.scope.count = 0;
      this.scope.localrating = 0;
      this.scope.scheduleapiid = [];
      this.scope.attendence = false;
      this.scope.starflag = false;
      this.scope.single_event = [];
      this.detailfact = detailfact;
      this.scope.fab = "Web/ic_floating_button.png";
      this.ls.pd = localStorage.profileData;
      this.window.localStorage.atflag = false;

      this.detailfact.getRateDetail(this.sp.id, this.ls.attendeeId).success(function (res) {

         console.log("new one dude................>>", res);
         _this.scope.detail = res;
         _this.eventdata();
         //compares date
         var d = moment().format().split('T');
         var date = new Date();
         var dd = new Date(res.event[0].endsOn.date);
         console.log(date.getTime(), ' ==>', dd.getTime(), dd);
         if (date.getTime() < dd.getTime()) {
            console.log("Enable rating");
            console.log(date, dd, "iffffffffffff");
            _this.scope.rateflag = true;
         } else {
            _this.scope.rateflag = false;
            console.log(date, dd, 'elseeeeeeeeeeeeeeeeee');
         }
      }).error(function (e) {
         console.log("eeeeeeeeerrrrrrooooooorrrrrr dude,......", e);
      });
      if (this.rs.profileData) {
         this.ls.person = this.rs.profileData.values;
         this.detailfact.putlinkedin(this.ls.person).success(function (res) {
            console.log("linkedIn data sent", res);
            _this.ls.attendeeId = res.id;
         });
      } else {
         this.detailfact.getEventDetail(this.sp.id).success(function (res) {
            console.log(res, "ppppppppppppppppppppppppppppppp");
            var startDate = String(res.event[0].startsOn.date).split(' ');
            var starttime = String(String(startDate[1]).split('.')[0]).split(':');
            if (starttime[0] >= 12) {
               if (starttime[0] > 12) {
                  starttime[0] = starttime[0] - 12;
               }
               starttime[2] = "pm";
            } else {
               starttime[2] = "am";
            }
            var stime = starttime[0] + ":" + starttime[1] + " " + starttime[2];
            var startDate = String(res.event[0].endsOn.date).split(' ');
            var starttime = String(String(startDate[1]).split('.')[0]).split(':');
            if (starttime[0] >= 12) {
               if (starttime[0] > 12) {
                  starttime[0] = starttime[0] - 12;
               }
               starttime[2] = "pm";
            } else {
               starttime[2] = "am";
            }
            var etime = starttime[0] + ":" + starttime[1] + " " + starttime[2];
            _this.scope.time = stime + "  " + "-" + "  " + etime;
            _this.timeout(function () {
               _this.scope.eventDate = moment(String(res.event[0].startsOn.date).split(' ')[0]).format('dddd,Do MMM, YYYY');
            }, 0);
            _this.scope.detail = res;
            _this.eventdata();
         });
      }
      this.detailfact.eventschedule(this.ls.attendeeId).success(function (res) {
         console.log("hellooooooo this is myshedule in event detail", res);
         for (var i = 0; i < res.length; i++) {
            _this.scope.scheduleapiid = res[i].id;
            console.log(res, _this.scope.scheduleapiid, _this.sp.id);
            if (_this.scope.scheduleapiid == _this.sp.id) {
               console.log("sameeeeeeeeeeeeeeeeeeeeeeeee to  sameeeeeeeeeeeeeeeeeeeeeeeeeeee");
               // if(this.rs.login){
               _this.scope.rateflag = false;
               // }
               _this.scope.attendence = true;
               break;
            }
         }
      });
   }

   _createClass(eventDetailctrl, [{
      key: "eventdata",
      value: function eventdata() {
         console.log("called");
         this.window.localStorage.setItem('eventId', this.scope.detail.event[0].id);
         var dayConvert = {
            Mon: "Monday",
            Tue: "Tuesday",
            Wed: "Wednesday",
            Thu: "Thursday",
            Fri: "Friday",
            Sat: "Saturday",
            Sun: "Sunday"
         };
         var startDate = String(this.scope.detail.event[0].startsOn.date).split(' ');
         var starttime = String(String(startDate[1]).split('.')[0]).split(':');
         if (starttime[0] >= 12) {
            if (starttime[0] > 12) {
               starttime[0] = starttime[0] - 12;
            }
            starttime[2] = "pm";
         } else {
            starttime[2] = "am";
         }
         var stime = starttime[0] + ":" + starttime[1] + " " + starttime[2];
         var startDate = String(this.scope.detail.event[0].endsOn.date).split(' ');
         var starttime = String(String(startDate[1]).split('.')[0]).split(':');
         if (starttime[0] >= 12) {
            if (starttime[0] > 12) {
               starttime[0] = starttime[0] - 12;
            }
            starttime[2] = "pm";
         } else {
            starttime[2] = "am";
         }
         var etime = starttime[0] + ":" + starttime[1] + " " + starttime[2];
         this.scope.time = stime + "-" + etime;
         console.log("res is here............", this.scope.detail);
         this.scope.mainRating = this.scope.detail.myRating;
      }
   }, {
      key: "star",
      value: function star() {
         this.scope.starflag = true;
      }
   }, {
      key: "speakerDetail",
      value: function speakerDetail(id) {
         var _this2 = this;

         this.ls.eventId = id;
         // this.location.path("speakerdetails/"+id);
         this.timeout(function () {
            console.log('IT WORKS', _this2);
            _this2.state.go("speakerdetails", {
               id: id
            });
         }, 0);
      }
   }, {
      key: "setflag",
      value: function setflag() {
         var d = moment().format().split('T');
         var date = new Date();
         console.log("fffffffffffffffffffffffffffff");
         var dd = new Date(this.scope.detail.event[0].endsOn.date);
         console.log(date, dd, "dateepppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp");
         if (date > dd) {
            console.log("kkkkkkkkkkkkkkkkkkkkqqqqqqqqqqqqqqqqqqqqqqqqq");
            console.log(date, dd, "iffffffffffff");
            this.scope.dateexpire = true;
            console.log(this.scope.dateexpire, "date expired");
         } else {
            this.scope.dateexpire = false;
            console.log(date, dd, 'elseeeeeeeeeeeeeeeeee');
         }
         if (this.scope.show) {
            this.scope.fab = "Web/ic_floating_button.png";
         } else {
            this.scope.fab = "Web/ic_floating_button_closed.png";
         }
         this.scope.show = !this.scope.show;
      }
   }, {
      key: "sendrate",
      value: function sendrate(rate) {
         this.scope.detail.myRating = rate;
         if (rate) {
            this.detailfact.postRate(this.sp.id, this.ls.attendeeId, rate).success(function (res) {
               console.log("rate sent to api", res);
            });
         }
      }
   }, {
      key: "attendToggle",
      value: function attendToggle() {
         if (this.rs.login) {
            console.log("see this", this.rs.login);
            if (this.scope.attendence) {
               this.scope.atrate = false;
               this.scope.content = "You had chosen to attend this event. Please confirm if you do not want to attend this event.";
               // this.scope.attendence=!this.scope.attendence;
               // this.scope.attendence=false;
            } else {
               this.scope.content = "Please confirm if you really want to attend this event";
               this.scope.atrate = true;
               // this.scope.attendence=!this.scope.attendence;
               // this.scope.attendence=true;
            }
         } else {
            $('#attend').modal('show');
         }
      }
   }, {
      key: "showit",
      value: function showit() {
         this.window.localStorage.atflag = 1;
         try {
            $(".IN-widget a")[0].click();
            if (this.rs.login) {
               console.log("see this", this.rs.login);
               if (this.scope.attendence) {
                  this.scope.content = "You had chosen to attend this event. Please confirm if you do not want to attend this event.";
                  // this.scope.attendence=!this.scope.attendence;
                  // this.scope.attendence=false;
               } else {
                  this.scope.content = "Please confirm if you really want to attend this event";
                  // this.scope.attendence=!this.scope.attendence;
               }
            }
         } catch (e) {
            IN.init();
            IN.parse();
            $(".IN-widget a")[0].click();
            if (this.rs.login) {
               console.log("see this", this.rs.login);
               if (this.scope.attendence) {
                  this.scope.content = "You had chosen to attend this event. Please confirm if you do not want to attend this event.";
                  // this.scope.attendence=!this.scope.attendence;
                  this.scope.attendence = false;
               } else {
                  this.scope.content = "Please confirm if you really want to attend this event";
                  // this.scope.attendence=!this.scope.attendence;
                  this.scope.attendence = true;
               }
            }
         }
      }
   }, {
      key: "attendence",
      value: function attendence() {

         if (this.scope.attendence) {
            this.scope.rateflag = true;
            this.scope.attendence = false;
            this.detailfact.deleteevent(this.sp.id, this.ls.attendeeId).success(function (res) {
               console.log("deleted !!!!!!!!");
               // $('.modal-backdrop').removeClass('in').addClass('out');
               // this.location.path("eventlist");
               // this.state.go("eventlist");
            });
         } else {
            // if(this.rs.login){
            this.scope.rateflag = false;
            // }
            this.scope.attendence = true;
            $('#confirm').modal('show');
            this.detailfact.postattendence(this.ls.attendeeId, this.sp.id).success(function (res) {
               console.log("attendingggggggggggggggggggggggg", res);
            });
         }
      }
   }, {
      key: "shareLinkedin",
      value: function shareLinkedin() {
         if (this.scope.show) {
            this.scope.fab = "Web/ic_floating_button.png";
         } else {
            this.scope.fab = "Web/ic_floating_button_closed.png";
         }
         this.scope.show = !this.scope.show;
         var payload = {
            "comment": this.location.absUrl().split('?')[0],
            "visibility": {
               "code": "anyone"
            }
         };

         IN.API.Raw("/people/~/shares?format=json").method("POST").body(JSON.stringify(payload)).result(function (data) {
            console.log(data);
            window.open(data.updateUrl, '_blank');
         });
      }
   }]);

   return eventDetailctrl;
}();

exports.default = eventDetailctrl;

},{}],13:[function(require,module,exports){
'use strict';

Config.$inject = ["$stateProvider", "$urlRouterProvider"];
var _eventlistctrl = require('./eventlistctrl');

var _eventlistctrl2 = _interopRequireDefault(_eventlistctrl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Config($stateProvider, $urlRouterProvider) {
    'ngInject';

    $stateProvider.state({
        name: 'eventlist',
        url: '/eventlist',
        templateUrl: './eventlist/eventlist.html',
        controller: 'eventlistctrl',
        controllerAs: 'elc'
    });
}
angular.module('myApp.eventlist', ['ui.router', 'ngStorage', 'slickCarousel']).config(Config).controller('eventlistctrl', _eventlistctrl2.default);

},{"./eventlistctrl":14}],14:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var eventlistctrl = function () {
  /*@ngInject;*/

  eventlistctrl.$inject = ["$scope", "$location", "detailfact", "$localStorage", "$timeout", "$state"];
  function eventlistctrl($scope, $location, detailfact, $localStorage, $timeout, $state) {
    var _this = this;

    _classCallCheck(this, eventlistctrl);

    this.location = $location;
    this.ls = $localStorage;
    this.timeout = $timeout;
    this.scope = $scope;
    this.scope.count = 0;
    this.scope.Array = [[]];
    this.state = $state;
    // this.filter=$filter;
    this.scope.searchFlag = 0;
    this.ls.calendarflag = 0;
    this.scope.EventArray = [];
    this.detailfact = detailfact;
    this.count = 7;
    $scope.search = "";
    this.scope.variable = true;

    console.log("Login", this.ls.login);
    this.scope.dt = new Date();
    this.detailfact.checkload();
    this.scope.options = {
      showWeeks: false,
      minDate: new Date('2016-11-01'),
      maxDate: new Date('2017-01-31')
    };
    this.scope.listConfig = {
      infinite: false,
      speed: 300,
      slidesToShow: 1,
      slidesToScroll: 1,
      method: {}
    };
    this.scope.events = {};
    var day = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];
    this.days = ['MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY', 'SUNDAY'];
    this.months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
    var today = new Date();
    var temp = String(today).split(' ');
    var todayDate = temp[2];
    detailfact.getDetails().success(function (res) {
      _this.tempobj = {};
      _this.tempobj1 = {};
      _this.tempobj2 = {};
      for (var i = 0; i < res.length; i++) {
        _this.scope.errormsg = "";
        var temp = String(res[i].startsOn.date).split(' ');
        // var dateofEvent=temp[0];
        var stime = String(temp[temp.length - 1]).split('.');
        var starttime = String(stime[0]).split(':');
        if (starttime[0] >= 12) {
          if (starttime[0] > 12) {
            starttime[0] = starttime[0] - 12;
          }
          starttime[2] = "pm";
        } else {
          starttime[2] = "am";
        }
        res[i].startTime = starttime[0] + ":" + starttime[1];
        res[i].period = starttime[2];
        res[i].date = temp[0];
        var tempdate = String(temp[0]).split('-');
        console.log(tempdate);
        res[i].Eventdate = tempdate[2];
        res[i].Eventyear = tempdate[0];
        for (var j = 0; j < 12; j++) {
          if (tempdate[1] == j + 1) {
            res[i].Eventmonth = _this.months[j];
          }
        }

        temp = String(res[i].endsOn.date).split(' ');
        stime = String(temp[temp.length - 1]).split('.');
        var starttime = String(stime[0]).split(':');
        if (starttime[0] >= 12) {
          if (starttime[0] > 12) {
            starttime[0] = starttime[0] - 12;
          }
          starttime[2] = "pm";
        } else {
          starttime[2] = "am";
        }
        res[i].endTime = starttime[0] + ":" + starttime[1] + " " + starttime[2];
      }
      _this.scope.filteredArray = res;

      //seach controller
      _this.dateArray = [];
      _this.dayArray = [];
      _this.scope.final = [];
      _this.indexArray = [];
      var d, tempMonth;
      var firstDate = new Date('11-01-2016');
      firstDate = String(firstDate).split(' ');
      var dayIndex = day.indexOf(firstDate[0]);

      for (var _i = 1, _j = 0; _i <= 30; _i++, _j++, dayIndex++) {
        if (_i < 10) {
          _i = "0" + String(_i);
        }
        dayIndex = dayIndex % 7;
        _this.tempobj.day = _this.days[dayIndex];
        d = moment('2016-11-' + _i).format().split('T')[0];
        _this.tempobj.date = d;
        _this.tempobj.printDate = String(_i);
        tempMonth = String(moment(d).format('LL')).split(' ');
        _this.tempobj.month = tempMonth[0] + ' ' + tempMonth[2];
        _this.scope.final.push(_this.tempobj);
        _this.tempobj = {};
        _this.dayArray.push(_this.days[dayIndex]);
        _this.dateArray.push(String(_i));
        _this.indexArray.push(d);
      }

      var firstDate = new Date('12-01-2016');
      firstDate = String(firstDate).split(' ');
      var dayIndex = day.indexOf(firstDate[0]);
      for (var _i2 = 1, _j2 = 0; _i2 <= 31; _i2++, _j2++, dayIndex++) {
        if (_i2 < 10) {
          _i2 = "0" + String(_i2);
        }
        dayIndex = dayIndex % 7;
        _this.tempobj1.day = _this.days[dayIndex];
        d = moment('2016-12-' + _i2).format().split('T')[0];
        _this.tempobj1.date = d;
        tempMonth = String(moment(d).format('LL')).split(' ');
        _this.tempobj1.month = tempMonth[0] + ' ' + tempMonth[2];
        _this.tempobj1.printDate = String(_i2);
        _this.scope.final.push(_this.tempobj1);
        _this.tempobj1 = {};
        _this.dayArray.push(_this.days[dayIndex]);
        _this.dateArray.push(String(_i2));
        _this.indexArray.push(d);
      }

      var firstDate = new Date('01-01-2017');
      firstDate = String(firstDate).split(' ');
      var dayIndex = day.indexOf(firstDate[0]);
      for (var _i3 = 1, _j3 = 0; _i3 <= 31; _i3++, _j3++, dayIndex++) {
        if (_i3 < 10) {
          _i3 = "0" + String(_i3);
        }
        dayIndex = dayIndex % 7;
        _this.tempobj2.day = _this.days[dayIndex];
        d = moment('2017-01-' + _i3).format().split('T')[0];
        _this.tempobj2.date = d;
        tempMonth = String(moment(d).format('LL')).split(' ');
        _this.tempobj2.month = tempMonth[0] + ' ' + tempMonth[2];
        _this.tempobj2.printDate = String(_i3);
        _this.scope.final.push(_this.tempobj2);
        _this.tempobj2 = {};
        _this.dayArray.push(_this.days[dayIndex]);
        _this.dateArray.push(String(_i3));
        _this.indexArray.push(d);
      }
      todayDate = Date.parse(String(moment().format().split('T')[0]));
      var dummyDate = Date.parse(String(moment(res[0].startsOn.date).format().split('T')[0]));
      console.log(dummyDate < todayDate);
      for (var _i4 = 1; _i4 <= res.length - 1; _i4++) {
        if (dummyDate < todayDate) {
          dummyDate = Date.parse(String(moment(res[_i4].startsOn.date).format().split('T')[0]));
          console.log(_i4, "if", dummyDate);
          continue;
        } else {
          _this.scope.currentTab = _this.indexArray.indexOf(moment(dummyDate).format().split('T')[0]);
          console.log(_i4, "else", new Date(moment(dummyDate).format().split('T')[0]));
          break;
        }
      }
      // console.log("today Date",Date.parse(this.indexArray[this.indexArray.length-1])>todayDate);
      // for(let i=this.indexArray.length-1;Date.parse(this.indexArray[i])>todayDate;i--){
      //     this.detailfact.getDateDetail(this.indexArray[i]).success((res)=>{
      //       if(res.code==3||res.code==4){
      //         i--;
      //         // console.log(i);
      //       }
      //       else{
      //         // console.log(i,this.indexArray[i],"i ,this.indexArray[i]");
      //         this.scope.currentTab=i;
      //       }
      //     })
      // }
    }).error(function (error) {
      //  console.log("ERROR",error);
    });

    this.scope.slickConfig2 = {
      infinite: false,
      speed: 300,
      slidesToShow: 7,
      slidesToScroll: 7,
      centerMode: false,
      method: {},
      focusOnSelect: true,
      initialSlide: this.scope.currentTab,
      arrows: false
    };
  }

  _createClass(eventlistctrl, [{
    key: "getevents",
    value: function getevents(date) {
      var _this2 = this;

      var tempArr = [];
      var print = [];

      this.scope.currentTab = this.indexArray.indexOf(date);
      // console.log("seeeee",this.indexArray,date,this.scope.currentTab);


      this.timeout(function () {
        _this2.scope.slickConfig2.method.slickGoTo(_this2.scope.currentTab, false);
      }, 0);
      this.detailfact.getDateDetail(date).success(function (res) {
        _this2.scope.EventArray = res;
        // console.log(this.scope.EventArray,"ssssssssssssssssssss");
        if (res.code == 3 || res.code == 4) {
          _this2.scope.errormsg = "No Events";
        } else {
          for (var i = 0; i < res.length; i++) {
            _this2.scope.errormsg = "";
            var temp = String(res[i].startsOn.date).split(' ');
            var stime = String(temp[temp.length - 1]).split('.');
            var starttime = String(stime[0]).split(':');
            if (starttime[0] >= 12) {
              if (starttime[0] > 12) {
                starttime[0] = starttime[0] - 12;
              }
              starttime[2] = "pm";
            } else {
              starttime[2] = "am";
            }
            res[i].startTime = starttime[0] + ":" + starttime[1];
            res[i].period = starttime[2];

            temp = String(res[i].endsOn.date).split(' ');
            stime = String(temp[temp.length - 1]).split('.');
            var starttime = String(stime[0]).split(':');
            if (starttime[0] >= 12) {
              if (starttime[0] > 12) {
                starttime[0] = starttime[0] - 12;
              }
              starttime[2] = "pm";
            } else {
              starttime[2] = "am";
            }
            res[i].endTime = starttime[0] + ":" + starttime[1] + " " + starttime[2];
          }

          for (i = 0; i < res.length - 1; i++) {
            if (res[i].startTime == res[i + 1].startTime) {
              tempArr.push(res[i]);
            } else if (tempArr.length === 0) {
              tempArr.push(res[i]);
              print.push(tempArr);
              tempArr = [];
            } else {
              tempArr.push(res[i]);
              print.push(tempArr);
              tempArr = [];
            }
          }
          if (res.length == 1) {
            tempArr.push(res[i]);
            print.push(tempArr);
            tempArr = [];
          } else if (res[i].startTime != res[i - 1].startTime) {
            tempArr.push(res[i]);
            print.push(tempArr);
            tempArr = [];
          } else if (tempArr.length != 0) {
            tempArr.push(res[i]);
            print.push(tempArr);
            tempArr = [];
          }
          // this.scope.Array=[ [{name:'Loading...'}] ];
          //
          // this.scope.load=false;
          // this.timeout(()=>{
          _this2.scope.Array = print;
          //this.scope.load=true;
          // },0)
        }
      });
    }
  }, {
    key: "detailfun",
    value: function detailfun(id) {
      var _this3 = this;

      this.timeout(function () {
        console.log('IT WORKS', _this3);
        _this3.state.go("details", {
          id: id
        });
      }, 0);
    }
  }, {
    key: "calendar",
    value: function calendar() {
      this.ls.calendarflag = 1;
    }
  }, {
    key: "calEvent",
    value: function calEvent(dt) {
      var caldate = moment(dt).format().split('T');
      this.getevents(caldate[0]);
    }
  }, {
    key: "search_event",
    value: function search_event() {
      this.scope.showbox = !this.scope.showbox;
      this.scope.searchFlag = !this.scope.searchFlag;
    }
  }]);

  return eventlistctrl;
}();

exports.default = eventlistctrl;

},{}],15:[function(require,module,exports){
'use strict';

Config.$inject = ["$stateProvider", "$urlRouterProvider"];
var _homeCtrl = require('./homeCtrl');

var _homeCtrl2 = _interopRequireDefault(_homeCtrl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Config($stateProvider, $urlRouterProvider) {
    'ngInject';

    $stateProvider.state({
        name: 'about',
        url: '/about',
        templateUrl: './home/about.html',
        controller: 'homeCtrl',
        controllerAs: 'hc'
    });
}

angular.module('myApp.home', ['ui.router', 'ngStorage']).config(Config).controller('homeCtrl', _homeCtrl2.default);

},{"./homeCtrl":16}],16:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var homeCtrl = function () {
	/*@ngInject;*/
	homeCtrl.$inject = ["$location", "$scope", "$rootScope", "$timeout", "$localStorage", "detailfact", "$window"];
	function homeCtrl($location, $scope, $rootScope, $timeout, $localStorage, detailfact, $window) {
		_classCallCheck(this, homeCtrl);

		this.scope = $scope;
		this.rs = $rootScope;
		this.window = $window;
		this.ls = $localStorage;
		this.timeout = $timeout;
		this.location = $location;
		this.ls.person = {};
		this.detailfact = detailfact;
		this.detailfact.checkload();
		this.myOnloadFunction();
	}

	_createClass(homeCtrl, [{
		key: 'myOnloadFunction',
		value: function myOnloadFunction() {
			var _this = this;

			if (this.rs.profileData) {
				this.ls.person = this.rs.profileData.values;
				this.detailfact.putlinkedin(this.ls.person).success(function (res) {
					console.log("linkedIn data sent", res);
					_this.ls.attendeeId = res.id;
				});
			}
		}
	}, {
		key: 'logout',
		value: function logout() {
			$('#logout').modal('show');
			// var checkLogout=confirm("Do you want to logout?");
		}
	}, {
		key: 'afterlogout',
		value: function afterlogout() {
			var _this2 = this;

			console.log("logout calllllllllllleeeeeeeeeeedddddddddddddd");
			IN.User.logout(function () {
				_this2.timeout(function () {
					_this2.rs.login = false;
					_this2.rs.profileData = "";
					_this2.window.localStorage.bcflag = 0;
					_this2.window.localStorage.msflag = 0;
					_this2.window.localStorage.atflag = 0;
					_this2.location.path('eventlist');
				}, 0);
			});
		}
	}]);

	return homeCtrl;
}();

exports.default = homeCtrl;

},{}],17:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var menuCtrl = function () {
	/*@ngInject;*/
	menuCtrl.$inject = ["$location", "$rootScope", "$scope", "$timeout", "$localStorage", "detailfact", "$window"];
	function menuCtrl($location, $rootScope, $scope, $timeout, $localStorage, detailfact, $window) {
		_classCallCheck(this, menuCtrl);

		this.scope = $scope;
		this.rs = $rootScope;
		this.ls = $localStorage;
		this.timeout = $timeout;
		this.window = $window;
		this.location = $location;
		this.window.localStorage.msflag = false;
		this.window.localStorage.bcflag = false;
		this.detailfact = detailfact;
		this.detailfact.checkload();
		this.ind = 0;
	}

	_createClass(menuCtrl, [{
		key: "linkedIn",
		value: function linkedIn(ind) {
			this.ind = ind;
			if (this.rs.login) {
				console.log("logged innnnnnnnnnnnnnnnnnn");
				console.log(ind);
				if (ind == 3) this.location.path("mc");
				if (ind == 2) this.location.path("businesscard");
			} else {
				if (ind == 2) $('#businesscard').modal('show');else if (ind == 3) $('#myschedule').modal('show');
				// var checkLogin = confirm("Sign In through Linkedin? ");
			}
		}
	}, {
		key: "afterlogin",
		value: function afterlogin() {
			if (this.ind == 3) {
				this.window.localStorage.msflag = 3;
			}
			if (this.ind == 2) {
				this.window.localStorage.bcflag = 2;
				console.log("businesscard", this.window.localStorage.bcflag);
			}

			console.log("did not logged innnnnnnnnnnnnnnnnnn");
			try {
				$(".IN-widget a")[0].click();
			} catch (e) {
				IN.init();
				IN.parse();
				$(".IN-widget a")[0].click();
			}
		}
	}]);

	return menuCtrl;
}();

exports.default = menuCtrl;

},{}],18:[function(require,module,exports){
'use strict';

Config.$inject = ["$stateProvider", "$urlRouterProvider"];
var _mcctrl = require('./mcctrl');

var _mcctrl2 = _interopRequireDefault(_mcctrl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Config($stateProvider, $urlRouterProvider) {
    'ngInject';

    $stateProvider.state({
        name: 'mc',
        url: '/mc',
        templateUrl: './myschedule/mc.html',
        controller: 'mcctrl',
        controllerAs: 'mc'
    });
}

angular.module('myApp.mc', ['ui.router', 'ngStorage', 'slickCarousel']).config(Config).controller('mcctrl', _mcctrl2.default);

},{"./mcctrl":19}],19:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var mcctrl = function () {
  /*@ngInject;*/
  mcctrl.$inject = ["$scope", "$rootScope", "$location", "$http", "detailfact", "$stateParams", "$localStorage", "$timeout", "$state"];
  function mcctrl($scope, $rootScope, $location, $http, detailfact, $stateParams, $localStorage, $timeout, $state) {
    var _this = this;

    _classCallCheck(this, mcctrl);

    this.location = $location;
    this.rs = $rootScope;
    this.timeout = $timeout;
    this.sp = $stateParams;
    this.scope = $scope;
    this.http = $http;
    this.state = $state;
    this.ls = $localStorage;
    this.detailfact = detailfact;
    this.detailfact.checkload();
    if (this.rs.profileData) {
      this.ls.person = this.rs.profileData.values;

      this.detailfact.putlinkedin(this.ls.person).success(function (res) {
        console.log("linkedIn data sent", res);
        _this.ls.attendeeId = res.id;
        console.log(res.id);
      });
    }
    this.detailfact.myschedule(this.ls.attendeeId).success(function (res) {
      console.log("Myschu7dlke ressssssssssss", res);
      if (res.code == 3 || res.code == 4) {
        _this.scope.errormsg = "No Events";
      } else {
        _this.scope.errormsg = "";
        var dummyDay, tempMonth, mon;
        _this.indexArray = [];
        _this.newArray = [];
        _this.newRes = {};
        var day = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];
        _this.days = ['Monday', 'Tuesday', 'Wednesday', 'Thrusday', 'Friday', 'Saturday', 'Sunday'];
        _this.newRes.date = String(String(res[0].startsOn.date).split(' ')[0]);
        _this.newRes.printDate = String(_this.newRes.date).split('-')[2];
        _this.indexArray.push(_this.newRes.date);
        dummyDay = String(moment(String(res[0].startsOn.date).split(' ')[0]).format('LLLL')).split(',')[0];
        tempMonth = String(moment(String(res[0].startsOn.date).split(' ')[0]).format('LL')).split(' ');
        mon = tempMonth[0] + ' ' + tempMonth[2];
        _this.newRes.month = mon;
        _this.newRes.day = dummyDay;
        _this.newArray.push(_this.newRes);
        _this.newRes = {};
        console.log(String(String(res[0].startsOn.date).split(' ')[0]));
        console.log(String(String(res[1].startsOn.date).split(' ')[0]));
        for (var p = 1, j = 0; p < res.length; p++) {
          if (String(String(res[p - 1].startsOn.date).split(' ')[0]) == String(String(res[p].startsOn.date).split(' ')[0])) {
            j++;
            console.log("same");
            continue;
          } else {
            var i = p - j;
            console.log("I value", i, p);
            _this.newRes.date = String(String(res[p].startsOn.date).split(' ')[0]);
            _this.newRes.printDate = String(_this.newRes.date).split('-')[2];
            _this.indexArray.push(_this.newRes.date);
            dummyDay = String(moment(String(res[p].startsOn.date).split(' ')[0]).format('LLLL')).split(',')[0];
            tempMonth = String(moment(String(res[p].startsOn.date).split(' ')[0]).format('LL')).split(' ');
            mon = tempMonth[0] + ' ' + tempMonth[2];
            _this.newRes.month = mon;
            _this.newRes.day = dummyDay;
            _this.newArray.push(_this.newRes);
            _this.newRes = {};
          }
        }
        console.log("hgbfjikrabdfkjghrlukji", _this.newArray, _this.indexArray);
        _this.scope.res = _this.newArray;
        _this.scope.currentTab = 0;
        _this.scope.myScheduleScroll = {
          infinite: false,
          speed: 300,
          slidesToShow: 7,
          slidesToScroll: 1,
          method: {},
          focusOnSelect: true
        };
      }
    });
  }

  _createClass(mcctrl, [{
    key: "getDateEvents",
    value: function getDateEvents(dateVal, fullDate) {
      var _this2 = this;

      this.scope.currentTab = this.indexArray.indexOf(fullDate);

      this.timeout(function () {
        _this2.scope.myScheduleScroll.method.slickGoTo(_this2.scope.currentTab, false);
      }, 0);

      this.detailfact.getmyschedule(this.ls.attendeeId, fullDate).success(function (res) {
        if (res.code == 3 || res.code == 4) {
          _this2.scope.errormsg = "No Events";
        } else {
          console.log(res);
          for (var i = 0; i < res.length; i++) {
            _this2.scope.errormsg = "";
            var temp = String(res[i].startsOn.date).split(' ');
            var stime = String(temp[temp.length - 1]).split('.');
            var starttime = String(stime[0]).split(':');
            console.log(starttime[0] + ":" + starttime[1]);
            if (starttime[0] >= 12) {
              if (starttime[0] > 12) {
                starttime[0] = starttime[0] - 12;
              }
              starttime[2] = "pm";
            } else {
              starttime[2] = "am";
            }
            res[i].startTime = starttime[0] + ":" + starttime[1] + " " + starttime[2];

            temp = String(res[0].endsOn.date).split(' ');
            stime = String(temp[temp.length - 1]).split('.');
            var starttime = String(stime[0]).split(':');
            console.log(starttime[0] + ":" + starttime[1]);
            if (starttime[0] >= 12) {
              if (starttime[0] > 12) {
                starttime[0] = starttime[0] - 12;
              }
              starttime[2] = "pm";
            } else {
              starttime[2] = "am";
            }
            res[i].endTime = starttime[0] + ":" + starttime[1] + " " + starttime[2];
          }
          _this2.scope.Array = res;
        }
        console.log("sceduleeeeeeeeeeeeeeeeeeeeeeeeee", res);
      });
    }
  }, {
    key: "detailfun",
    value: function detailfun(id) {
      var _this3 = this;

      this.timeout(function () {
        console.log('IT WORKS', _this3);
        _this3.state.go("details", {
          id: id
        });
      }, 0);
    }
  }]);

  return mcctrl;
}();

exports.default = mcctrl;

},{}],20:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var detailfact = function () {

  /*@ngInject;*/
  detailfact.$inject = ["$http", "$rootScope", "$localStorage"];
  function detailfact($http, $rootScope, $localStorage) {
    _classCallCheck(this, detailfact);

    this.http = $http;
    this.ls = $localStorage;
    this.rs = $rootScope;
    console.log("services");
  }

  _createClass(detailfact, [{
    key: "checkload",
    value: function checkload() {
      if (this.ls.splash === 0) {
        this.rs.flag = 1;
        this.ls.flag = 1;
        return true;
      } else return false;
    }
  }, {
    key: "checkuser",
    value: function checkuser() {
      if (this.ls.login == true) {
        return true;
      }
      return false;
    }
  }, {
    key: "getData",
    value: function getData() {
      console.log("inside getData");
      return this.http({
        method: 'get',
        url: 'http://35.154.47.65/sponsor',
        headers: { 'apisecret': 'df89c67afe0ec6d78ccfdba740ee2db5' }
      });
    }
  }, {
    key: "getDetails",
    value: function getDetails() {
      console.log("Details");
      return this.http({
        method: 'get',
        url: 'http://35.154.47.65/event',
        headers: { 'apisecret': 'df89c67afe0ec6d78ccfdba740ee2db5' }
      });
    }
  }, {
    key: "postRate",
    value: function postRate(eventid, personid, rate) {
      console.log("Details");
      return this.http({
        method: 'post',
        url: 'http://35.154.47.65/event',
        headers: { 'apisecret': 'df89c67afe0ec6d78ccfdba740ee2db5', 'Content-Type': 'application/x-www-form-urlencoded' },
        transformRequest: function transformRequest(obj) {
          var str = [];
          for (var p in obj) {
            str.push(encodeURIComponent(p) + "=" + encodeURIComponent(obj[p]));
          }return str.join("&");
        },
        data: { "attendeeId": personid, "eventId": eventid, "rate": rate }
      });
    }
    // detailfact.$inject = ['$http'];

  }, {
    key: "getDateDetail",
    value: function getDateDetail(date) {
      return this.http({
        method: 'get',
        url: 'http://35.154.47.65/event?date=' + date,
        headers: { 'apisecret': 'df89c67afe0ec6d78ccfdba740ee2db5' }
      });
    }
  }, {
    key: "getEventDetail",
    value: function getEventDetail(id) {
      return this.http({
        method: 'get',
        url: 'http://35.154.47.65/event?id=' + id,
        headers: { 'apisecret': 'df89c67afe0ec6d78ccfdba740ee2db5' }
      });
    }
  }, {
    key: "deleteevent",
    value: function deleteevent(id, aid) {
      return this.http({
        method: 'post',
        url: 'http://35.154.47.65/event?id=' + id + '&attendeeId=' + aid + '&remove=1',
        headers: { 'apisecret': 'df89c67afe0ec6d78ccfdba740ee2db5' }
      });
    }
  }, {
    key: "getRateDetail",
    value: function getRateDetail(id, aid) {
      return this.http({
        method: 'post',
        url: 'http://35.154.47.65/event?id=' + id + '&attendeeId=' + aid,
        headers: { 'apisecret': 'df89c67afe0ec6d78ccfdba740ee2db5' }
      });
    }
  }, {
    key: "putlinkedin",
    value: function putlinkedin(obj) {
      console.log(obj[0]);
      return this.http({
        method: 'post',
        url: 'http://35.154.47.65/register',
        headers: { 'apisecret': 'df89c67afe0ec6d78ccfdba740ee2db5', 'Content-Type': 'application/x-www-form-urlencoded' },
        transformRequest: function transformRequest(obj) {
          var str = [];
          for (var p in obj) {
            str.push(encodeURIComponent(p) + "=" + encodeURIComponent(obj[p]));
          }return str.join("&");
        },
        data: { "firstName": obj[0].firstName,
          "lastName": obj[0].lastName,
          "email": obj[0].emailAddress,
          "designation": obj[0].positions.values[0].title,
          "company": obj[0].positions.values[0].company.name,
          "profilePicture": obj[0].pictureUrl }

      });
    }
  }, {
    key: "getattendeelist",
    value: function getattendeelist() {
      return this.http({
        method: 'get',
        url: 'http://35.154.47.65/attendee',
        headers: { 'apisecret': 'df89c67afe0ec6d78ccfdba740ee2db5' }
      });
    }
  }, {
    key: "getmyschedule",
    value: function getmyschedule(id, date) {
      return this.http({
        method: 'get',
        url: 'http://35.154.47.65/schedule?id=' + id + '&date=' + date,
        headers: { 'apisecret': 'df89c67afe0ec6d78ccfdba740ee2db5' }
      });
    }
  }, {
    key: "myschedule",
    value: function myschedule(id) {
      return this.http({
        method: 'get',
        url: 'http://35.154.47.65/schedule?id=' + id,
        headers: { 'apisecret': 'df89c67afe0ec6d78ccfdba740ee2db5' }
      });
    }
  }, {
    key: "eventschedule",
    value: function eventschedule(id) {
      return this.http({
        method: 'get',
        url: 'http://35.154.47.65/schedule?id=' + id,
        headers: { 'apisecret': 'df89c67afe0ec6d78ccfdba740ee2db5' }
      });
    }
  }, {
    key: "getSpeakerDetail",
    value: function getSpeakerDetail(id) {
      return this.http({
        method: 'get',
        url: 'http://35.154.47.65/speaker?id=' + id,
        headers: { 'apisecret': 'df89c67afe0ec6d78ccfdba740ee2db5' }
      });
    }
  }, {
    key: "postattendence",
    value: function postattendence(attendeeId, eventId) {
      console.log("eventId", eventId);
      return this.http({
        method: 'post',
        url: 'http://35.154.47.65/event',
        headers: { 'apisecret': 'df89c67afe0ec6d78ccfdba740ee2db5', 'Content-Type': 'application/x-www-form-urlencoded' },
        transformRequest: function transformRequest(obj) {
          var str = [];
          for (var p in obj) {
            str.push(encodeURIComponent(p) + "=" + encodeURIComponent(obj[p]));
          }return str.join("&");
        },
        data: { "attendeeId": attendeeId, "eventId": eventId }
      });
    }
  }]);

  return detailfact;
}();

exports.default = detailfact;

},{}],21:[function(require,module,exports){
'use strict';

Config.$inject = ["$stateProvider", "$urlRouterProvider"];
var _speakerDetailctrl = require('./speakerDetailctrl');

var _speakerDetailctrl2 = _interopRequireDefault(_speakerDetailctrl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Config($stateProvider, $urlRouterProvider) {
    'ngInject';

    $stateProvider.state({
        name: 'speakerdetails',
        url: '/speakerdetails/:id',
        templateUrl: './speakerDetail/speakerDetail.html',
        controller: 'speakerDetailctrl',
        controllerAs: 'edc'
    });
}

angular.module('myApp.speakerDetail', ['ui.router', 'ngStorage', 'slickCarousel']).config(Config).controller('speakerDetailctrl', _speakerDetailctrl2.default);

},{"./speakerDetailctrl":22}],22:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var speakerDetailctrl =
/*@ngInject;*/
["$scope", "$location", "$http", "detailfact", "$stateParams", "$localStorage", function speakerDetailctrl($scope, $location, $http, detailfact, $stateParams, $localStorage) {
  var _this = this;

  _classCallCheck(this, speakerDetailctrl);

  this.loc = $location;
  this.rp = $stateParams;
  this.scope = $scope;
  this.http = $http;
  this.ls = $localStorage;
  this.scope.rate = 0;
  this.scope.rateflag = false;
  this.scope.count = 0;
  this.scope.starflag = false;
  this.scope.single_event = [];
  this.services = detailfact;
  this.services.getSpeakerDetail(this.ls.eventId).success(function (res) {
    _this.scope.speaker = res;
    console.log(res, _this.ls.eventId, "speakerrrrrrrrrrrrr");
  });
}];

exports.default = speakerDetailctrl;

},{}],23:[function(require,module,exports){
'use strict';

Config.$inject = ["$stateProvider", "$urlRouterProvider"];
var _splashCtrl = require('./splashCtrl');

var _splashCtrl2 = _interopRequireDefault(_splashCtrl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Config($stateProvider, $urlRouterProvider) {
    'ngInject';

    $stateProvider.state({
        name: 'splash',
        url: '/splash',
        templateUrl: './splash/splash.html',
        controller: 'splashCtrl',
        controllerAs: 'lc'
    });
}
angular.module('myApp.splash', ['ui.router', 'ngStorage']).config(Config).controller('splashCtrl', _splashCtrl2.default);

},{"./splashCtrl":24}],24:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var splashCtrl =
/*@ngInject;*/
["$scope", "$location", "$http", "detailfact", "$rootScope", "$localStorage", "$timeout", function splashCtrl($scope, $location, $http, detailfact, $rootScope, $localStorage, $timeout) {
	var _this = this;

	_classCallCheck(this, splashCtrl);

	console.log("Splash");
	this.scope = $scope;
	this.http = $http;
	this.location = $location;
	this.emp = detailfact;
	this.ls = $localStorage;
	this.rs = $rootScope;
	this.timeout = $timeout;
	this.ls.flag = 0;
	this.rs.flag = 0;

	this.timeout(function () {
		_this.location.path('eventlist');
		_this.ls.flag = 1;
		_this.rs.flag = 1;
		_this.ls.splash = 0;
	}, 3000); //TODO, 	revert to 3000 while you build
}];

exports.default = splashCtrl;

},{}]},{},[1]);
